---
- name: Update No-IP hostname with this host's public IP
  hosts: web
  gather_facts: no
  become: no

  # Inventory must define (in [all:vars]):
  #   noip_username=...
  #   noip_password=...
  #   noip_hostname=it360fall20253ergroup.no-ip.org

  vars:
    http_agent: "ansible-noip/2.0"

  pre_tasks:
    - name: Check required No-IP vars
      assert:
        that:
          - noip_username is defined
          - noip_password is defined
          - noip_hostname is defined
        fail_msg: "Set noip_username, noip_password, and noip_hostname in inventory.ini [all:vars]."

  tasks:
    - block:
        - name: Get public IP (ipify)
          uri:
            url: https://api.ipify.org
            return_content: yes
            status_code: 200
          register: ipify

        - name: Set public_ip
          set_fact:
            public_ip: "{{ ipify.content | trim }}"
      rescue:
        - name: Get public IP (fallback ifconfig.me)
          uri:
            url: https://ifconfig.me/ip
            return_content: yes
            status_code: 200
          register: ifcfg

        - name: Set public_ip (fallback)
          set_fact:
            public_ip: "{{ ifcfg.content | trim }}"

    - name: Update No-IP hostname to this host's public IP
      uri:
        url: "https://dynupdate.no-ip.com/nic/update?hostname={{ noip_hostname | urlencode }}&myip={{ public_ip | urlencode }}"
        method: GET
        force_basic_auth: yes
        url_username: "{{ noip_username }}"
        url_password: "{{ noip_password }}"
        http_agent: "{{ http_agent }}"
        return_content: yes
        status_code: 200
      register: noip_update

    - name: Show No-IP response (expect 'good <ip>' or 'nochg <ip>')
      debug:
        msg: "{{ inventory_hostname }} => {{ noip_update.content | trim }}"
